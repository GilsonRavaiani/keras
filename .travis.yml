sudo: required
dist: trusty
language: python
cache:
  directories:
    - $HOME/miniconda
before_cache:
  - rm -R $HOME/miniconda/pkgs/*
matrix:
    include:
        - python: 2.7
          env: KERAS_BACKEND=tensorflow TEST_MODE=PEP8
        - python: 2.7
          env: KERAS_BACKEND=tensorflow TEST_MODE=INTEGRATION_TESTS
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=DOC
        - python: 2.7
          env: KERAS_BACKEND=tensorflow
        - python: 3.6
          env: KERAS_BACKEND=tensorflow
        - python: 2.7
          env: KERAS_BACKEND=theano THEANO_FLAGS=optimizer=fast_compile
        - python: 3.6
          env: KERAS_BACKEND=theano THEANO_FLAGS=optimizer=fast_compile
        - python: 2.7
          env: KERAS_BACKEND=cntk PYTHONWARNINGS=ignore
        - python: 3.6
          env: KERAS_BACKEND=cntk PYTHONWARNINGS=ignore
install:
  - export PATH="$HOME/miniconda/bin:$PATH"
  # Inital setup if cache dir does not exist
  - if [[ ! -d $HOME/miniconda/bin ]]; then
      if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
        wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
      else
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      fi;
      bash miniconda.sh -f -b -p $HOME/miniconda;
      conda config --set always_yes yes --set changeps1 no;
      conda create --copy -q -n test-environment python=$TRAVIS_PYTHON_VERSION;
    fi
  - conda config --set always_yes yes --set changeps1 no
  - hash -r
  -
  - conda update -q conda
  - source activate test-environment
  -
  # Collect required packages to minimize calls to conda
  # install PIL for preprocessing tests
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      export ADDITIONAL_CONDA_PACKAGES="pil";
    elif [[ "$TRAVIS_PYTHON_VERSION" == "3.6" ]]; then
      export ADDITIONAL_CONDA_PACKAGES="Pillow";
    fi
  -
  - pip install --upgrade pip
  - conda install --copy --update-deps -q python=$TRAVIS_PYTHON_VERSION numpy nose scipy matplotlib pandas pytest h5py mkl mkl-service pydot graphviz $ADDITIONAL_CONDA_PACKAGES
  -
  -
  - pip install -U --upgrade-strategy only-if-needed theano tensorflow
  - pip install -U --upgrade-strategy only-if-needed -e .[tests]

  # set library path
  - export LD_LIBRARY_PATH=$HOME/miniconda/envs/test-environment/lib/:$LD_LIBRARY_PATH
  # install cntk
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      pip install https://cntk.ai/PythonWheel/CPU-Only/cntk-2.3.1-cp27-cp27mu-linux_x86_64.whl;
    elif [[ "$TRAVIS_PYTHON_VERSION" == "3.6" ]]; then
      pip install https://cntk.ai/PythonWheel/CPU-Only/cntk-2.3.1-cp36-cp36m-linux_x86_64.whl;
    fi


  # exclude different backends to measure a coverage for the designated backend only
  - if [[ "$KERAS_BACKEND" != "tensorflow" ]]; then
      echo '    keras/backend/tensorflow_backend.py' >> .coveragerc;
    fi
  - if [[ "$KERAS_BACKEND" != "theano" ]]; then
      echo '    keras/backend/theano_backend.py' >> .coveragerc;
    fi
  - if [[ "$KERAS_BACKEND" != "cntk" ]]; then
      echo '    keras/backend/cntk_backend.py' >> .coveragerc;
    fi

  #install open mpi
  - rm -rf ~/mpi
  - mkdir ~/mpi
  - pushd ~/mpi
  - wget http://cntk.ai/PythonWheel/ForKeras/depends/openmpi_1.10-3.zip
  - unzip ./openmpi_1.10-3.zip
  - sudo dpkg -i openmpi_1.10-3.deb
  - popd

# command to run tests
script:
  - export MKL_THREADING_LAYER="GNU"
  # run keras backend init to initialize backend config
  - python -c "import keras.backend"
  # create dataset directory to avoid concurrent directory creation at runtime
  - mkdir ~/.keras/datasets
  # set up keras backend
  - sed -i -e 's/"backend":[[:space:]]*"[^"]*/"backend":\ "'$KERAS_BACKEND'/g' ~/.keras/keras.json;
  - echo -e "Running tests with the following config:\n$(cat ~/.keras/keras.json)"
  - if [[ "$TEST_MODE" == "INTEGRATION_TESTS" ]]; then
       PYTHONPATH=$PWD:$PYTHONPATH py.test tests/integration_tests;
    elif [[ "$TEST_MODE" == "PEP8" ]]; then
       PYTHONPATH=$PWD:$PYTHONPATH py.test --pep8 -m pep8 -n0;
    elif [[ "$TEST_MODE" == "DOC" ]]; then
        PYTHONPATH=$PWD:$PYTHONPATH py.test tests/test_documentation.py;
    else
       PYTHONPATH=$PWD:$PYTHONPATH py.test tests/ --ignore=tests/integration_tests --ignore=tests/test_documentation.py --cov-config .coveragerc --cov=keras tests/;
    fi
